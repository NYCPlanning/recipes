name: RECIPE_ENGINE backup

on:
  schedule:
    - cron: '0 1 * * MON'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies ...
        run: |
          sudo apt update
          sudo apt install -y curl
          
          sudo tee /etc/apt/sources.list.d/pgdg.list <<END
          deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
          END
          # get the signing key and import it
          curl -O https://www.postgresql.org/media/keys/ACCC4CF8.asc
          sudo apt-key add ACCC4CF8.asc
          
          sudo apt update
          sudo apt install -y postgresql-client-11
          sudo apt autoremove
          
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv ./mc /usr/bin
          mc config host add spaces $AWS_S3_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY --api S3v4
          
      - name: create backup and upload
        run: |
          DATE=$(date "+%Y-%m-%d")
          mc rm -r --force spaces/edm-backup/RECIPE_ENGINE/main/latest
          mc rm -r --force spaces/edm-backup/RECIPE_ENGINE/main/$DATE
          
          pg_dump $RECIPE_ENGINE -O -F t | gzip > backup.gz
          
          mc cp backup.gz spaces/edm-backup/RECIPE_ENGINE/main/latest/backup.gz
          mc cp backup.gz spaces/edm-backup/RECIPE_ENGINE/main/$DATE/backup.gz
          rm backup.gz
