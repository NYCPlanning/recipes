name: Recipe Backup
on:
  schedule:
    - cron: '0 0 * * MON'
jobs:
  migration:
    runs-on: ubuntu-latest
    env:
      RECIPE_ENGINE: ${{ secrets.RECIPE_ENGINE }}
      AWS_S3_ENDPOINT: ${{ secrets.AWS_S3_ENDPOINT }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v2
      - name: install dependencies ...
        run: |
          sudo apt update
          sudo apt install -y curl zip

          sudo tee /etc/apt/sources.list.d/pgdg.list <<END
          deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main
          END

          # get the signing key and import it
          curl -O https://www.postgresql.org/media/keys/ACCC4CF8.asc
          sudo apt-key add ACCC4CF8.asc

          sudo apt update
          sudo apt install -y postgresql-client-11
          sudo apt autoremove
          curl -O https://dl.min.io/client/mc/release/linux-amd64/mc
          chmod +x mc
          sudo mv ./mc /usr/bin
          mc config host add spaces $AWS_S3_ENDPOINT $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY --api S3v4
      - name: migrate meta.metadata
        run: |
          DATE=$(date "+%Y-%m-%d")
          mc rm -r --force spaces/edm-backup/recipes/latest
          mc rm -r --force spaces/edm-backup/recipes/$DATE
          mkdir -p output
          psql $RECIPE_ENGINE -c "\copy (
            SELECT 
              config::jsonb ->> 'dstSRS' as dstSRS,
              config::jsonb ->> 'srcSRS' as srcSRS,
              config::jsonb ->> 'schema_name' as schema_name,
              config::jsonb ->> 'version_name' as version_name,
              config::jsonb ->> 'geometryType' as geometryType,
              config::jsonb ->> 'layerCreationOptions' as layerCreationOptions,
              config::jsonb ->> 'metaInfo' as metaInfo,
              config::jsonb ->> 'path' as path,
              config::jsonb ->> 'srcOpenOptions' as srcOpenOptions,
              config::jsonb ->> 'newFieldNames' as newFieldNames
            FROM meta.metadata
            order by schema_name
          ) TO stdout DELIMITER ',' CSV HEADER;" > output/recipes.csv
          mc cp output/recipes.csv spaces/edm-backup/recipes/latest/recipes.csv
          mc cp output/recipes.csv spaces/edm-backup/recipes/$DATE/recipes.csv
